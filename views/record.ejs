<!DOCTYPE html>
<html>

<head>
    <meta charset="utf-8">
    <title>STAMP APP</title>
    <script src="/send_url.js"></script>
    <script src="./script.js"></script>
    <link rel="stylesheet" href="/css/style.css">
    <script src="https://cdn.jsdelivr.net/npm/chart.js@2.8.0"></script>
</head>

<body>

    <%- include('header') %>

    <div class="main">
        <!--現在時刻-->
        <div id="current-time-wrapper">
            <h2>現在時刻</h2>
            <p id="current-time"></p>
        </div>
        <script>
            function showCurrentTime() {
                let date = new Date();
                document.getElementById("current-time").innerHTML = date.toLocaleString("ja");
            }
            setInterval('showCurrentTime()', 10);
        </script>

        <!--勤務状況(勤務外、勤務中、休憩中のいずれか)-->
        <div id="current-state-wrapper">
            <h2>現在の状況</h2>
            <p id="current-state"><%= locals.currentState %></p>
        </div>

        <!--勤務開始時刻-->
        <div id="start-time-wrapper">
            <h2>勤務開始時刻</h2>
            <p id="start-time"><%= locals.startWorkTime %></p>
        </div>

        <!--勤務終了時刻-->
        <div id="finish-time-wrapper">
            <h2>勤務終了時刻</h2>
            <p id="finish-time"><%= locals.finishWorkTime %></p>
        </div>

        <!--休憩開始時刻
        <div id="start-break-time-wrapper">
            <h2>休憩開始時刻</h2>
            <p id="start-break-time"><%= locals.startBreakTime %></p>
        </div>
        -->

        <!--休憩終了時刻
        <div id="finish-break-time-wrapper">
            <h2>休憩終了時刻</h2>
            <p id="finish-break-time"><%= locals.finishBreakTime %></p>
        </div>
        -->

        <!--本日の勤務時間-->
        <div id="working-hours-wrapper">
            <h2>本日の勤務時間</h2>
            <p id="working-hours">00:00:00</p>
        </div>
        <script>
            function intToTime(t) {
                let sec  = twoDigit(t % 60);
                t = Math.floor(t / 60); 

                let min  = twoDigit(t% 60);
                t = Math.floor(t / 60); 

                let hour = twoDigit(t);

                return hour + ":" + min + ":" + sec;
            }
            
            function showWorkingHours() {
                workingHours = 0
                currentState = document.getElementById("current-state").textContent;
                if (currentState === "勤務中" || currentState === "休憩中") {
                    start = document.getElementById("start-time").textContent;
                    now = new Date();
                    workingHours = Math.floor((now.getTime() - Date.parse(start))/1000);
                } 
                if (currentState === "退勤済") {
                    start = document.getElementById("start-time").textContent;
                    finish = document.getElementById("finish-time").textContent;
                    workingHours = Math.floor((Date.parse(finish) - Date.parse(start))/1000);
                }
                document.getElementById("working-hours").innerHTML = intToTime(workingHours);
                    
            };

            setInterval("showWorkingHours()", 10);
        </script>

        <!--本日の休憩時間
        <div id="breaking-hours-wrapper">
            <h2>本日の休憩時間</h2>
            <p id="breaking-hours">00:00:00</p>
        </div>
        <script>
            function showBreakingHours() {
                currentState = document.getElementById("current-state").textContent;
                if (currentState === "休憩中") {
                    start = document.getElementById("start-break-time").textContent;
                    now = new Date();
                    workingHours = Math.floor((now.getTime() - Date.parse(start))/1000);

                    let temp = workingHours;

                    let sec  = twoDigit(temp % 60);
                    temp = Math.floor(temp / 60); 

                    let min  = twoDigit(temp % 60);
                    temp = Math.floor(temp / 60); 

                    let hour = twoDigit(temp);

                    let msg = hour + ":" + min + ":" + sec;
                    document.getElementById("breaking-hours").innerHTML = msg;
                } 
                if (document.getElementById("finish-break-time").textContent !== "") {
                    start = document.getElementById("start-break-time").textContent;
                    finish = document.getElementById("finish-break-time").textContent;
                    workingHours = Math.floor((Date.parse(finish) - Date.parse(start))/1000);

                    let temp = workingHours;

                    let sec  = twoDigit(temp % 60);
                    temp = Math.floor(temp / 60); 

                    let min  = twoDigit(temp % 60);
                    temp = Math.floor(temp / 60); 

                    let hour = twoDigit(temp);

                    let msg = hour + ":" + min + ":" + sec;
                    document.getElementById("breaking-hours").innerHTML = msg;
                }
            };

            setInterval("showBreakingHours()", 10);
        </script>
        -->

        <!--打刻-->
        <div id="stamp-wrapper"> 
            <h2>打刻</h2>

            <!--出勤-->
            <form action="/start_work" method="post" style="display: inline">
                <% if (!locals.isLoggedIn) { %>
                    <input type="submit" value="出勤" id="start-work" onclick="alert('ログインしてください。'); return false;">
                <% } else if (locals.currentState === "出勤前") { %>
                    <input type="submit" value="出勤" id="start-work" onclick="return confirm('出勤しますか？')">
                <% } else { %>
                    <input type="submit" value="出勤" id="start-work" onclick="alert('すでに出勤しています。'); return false;">
                <% } %>
                
            </form>

            <!--退勤-->
            <form action="/finish_work" method="post" style="display: inline" >
                <% if (!locals.isLoggedIn) { %>
                    <input type="submit" value="退勤" id="finish-work" onclick="alert('ログインしてください。'); return false;">
                <% } else if (locals.currentState === "出勤前") { %>
                    <input type="submit" value="退勤" id="finish-work" onclick="alert('まだ出勤していません。'); return false;">
                <% } else if (locals.currentState === "勤務中") { %>
                    <input type="submit" value="退勤" id="finish-work" onclick="return confirm('退勤しますか？')">
                <% } else { %>
                    <input type="submit" value="退勤" id="finish-work" onclick="alert('すでに退勤しています。'); return false;">
                <% } %>
            </form>

            <!--休憩
            <form action="/start_break" method="post" style="display: inline" >
                <% if (!locals.isLoggedIn) { %>
                    <input type="submit" value="休憩" id="start_break" onclick="alert('ログインしてください。'); return false;">
                <% } else if (locals.currentState === "出勤前") { %>
                    <input type="submit" value="休憩" id="start_break" onclick="alert('まだ出勤していません。'); return false;">
                <% } else if (locals.currentState === "勤務中") { %>
                    <input type="submit" value="休憩" id="start_break" onclick="return confirm('休憩しますか？')">
                <% }else if (locals.currentState === "休憩中") { %>
                    <input type="submit" value="休憩" id="start_break" onclick="return confirm('休憩中です。')">
                <% } else { %>
                    <input type="submit" value="休憩" id="start_break" onclick="alert('すでに退勤しています。'); return false;">
                <% } %>
            </form>
            -->

            <!--戻り
            <form action="/finish_break" method="post" style="display: inline" >
                <% if (!locals.isLoggedIn) { %>
                    <input type="submit" value="戻り" id="finish_break" onclick="alert('ログインしてください。'); return false;">
                <% } else if (locals.currentState === "出勤前") { %>
                    <input type="submit" value="戻り" id="finish_break" onclick="alert('まだ出勤していません。'); return false;">
                <% } else if (locals.currentState === "勤務中") { %>
                    <input type="submit" value="戻り" id="finish_break" onclick="return confirm('まだ休憩していません。')">
                <% }else if (locals.currentState === "休憩中") { %>
                    <input type="submit" value="戻り" id="finish_break" onclick="return confirm('勤務を再開しますか？')">
                <% } else { %>
                    <input type="submit" value="戻り" id="finish_break" onclick="alert('すでに退勤しています。'); return false;">
                <% } %>
            </form>
            -->
        </div>

        <!--過去の勤務状況-->
        <div id="history-wrapper">
            <h2 id="history-label">過去の勤務状況</h2>

            <% if (locals.isLoggedIn) { %>

                <%
                    let temp = year_month_history.split("-");
                    let year_history = temp[0];

                    let month_history = +temp[1];
                %>

                <!--過去の勤務状況を検索-->
                <form action="/history" method="post" id="search-history">
                    <input type="month" value="<%= year_month_history %>" name="year_month_history">
                    <input type="submit" value="検索">
                </form>

                <%
                    function timeToFloat(time) {
                        let temp = time.split(":");
                        return +temp[0] + temp[1]/60 + temp[2]/3600;
                    }

                    dates = [];
                    workingHours = [];
                    for (i = 0; i < 31; i++) {
                        dates.push(i+1);
                        workingHours.push(0);
                    }

                    totalWorkingHours = 0;

                    work_data.forEach((datum) => {
                        workingHours[datum.date.getDate()-1] = timeToFloat(datum.working_hours);
                        totalWorkingHours += timeToFloat(datum.working_hours);
                    })

                    averageWorkingHours = 0;
                    if (work_data.length > 0) {
                        averageWorkingHours = totalWorkingHours/work_data.length;
                    }
                %>

                <!--総勤務時間-->
                <div id="total-working-hours-wrapper">
                    <h2><%= month_history %>月の総勤務時間</h2>
                    <p id="total-working-hours"><%= Math.floor(totalWorkingHours) %>時間</p>
                </div>

                <!--平均勤務時間-->
                <div id="average-working-hours-wrapper">
                    <h2><%= month_history %>月の平均勤務時間</h2>
                    <p id="average-working-hours"><%= Math.floor(averageWorkingHours) %>時間</p>
                </div>

                <!--グラフ-->
                <canvas id="working-hours-graph"></canvas>
                <script>
                    dates = [<%= dates %>];
                    workingHours = [<%= workingHours %>];
                    (function(){
                        var ctx = document.getElementById("working-hours-graph");
                        
                        var data = {
                            labels: dates,
                            datasets: [{
                                label: '勤務時間',
                                data: workingHours, //配列でデータをセット
                                borderColor: '#80bcff', //ボーダーの色
                                lineTension: 0,
                            }]
                        };
                        
                        var options = {
                            scales: {
                                xAxes: [{
                                    scaleLabel: {
                                        display: true,
                                        labelString: '日'
                                    }
                                }],
                                yAxes: [{
                                    ticks: {
                                        beginAtZero:true
                                    }, 
                                    scaleLabel: {
                                        display: true, 
                                        labelString: '勤務時間[h]'
                                    }
                                }],
                                legend: {
                                    display: false
                                }
                            }
                        };

                        var ex_chart = new Chart(ctx, {
                            type: 'line', //折れ線グラフ
                            data: data, //上記設定のデータ
                            options: options
                        });
                    }());
                </script>
                <!--グラフ ここまで-->
                
                <!--表-->
                <div id="table-head">
                    <span class="day-column">
                        日付
                    </span>
                    <span class="working-hours-column">
                        勤務時間
                    </span>
                </div>

                <ul id="table-body">
                    <% 
                        function twoDigit(num) {
                            let ret;
                            if( num < 10 ) 
                                ret = "0" + num; 
                            else 
                                ret = num; 
                            return ret;
                        }

                        work_data.forEach((datum) => { 
                            let date = datum.date;
                            let year  =          date.getFullYear();
                            let month = twoDigit(date.getMonth() + 1);
                            let day   = twoDigit(date.getDate());
                            let date_string = year + "/" + month + "/" + day;
                            if (datum.username === locals.username) { %>
                            <li>
                                <span class="day-column">
                                    <%= date_string %>
                                </span>
                                <span class="working-hours-column">
                                    <%= datum.working_hours %>
                                </span>
                                <form action="/delete/<%= datum.id %>" method="post" style="display: inline" id="delete-work-data">
                                    <input type="submit" value="削除" onclick="return confirm('選択したデータを削除します。よろしいですか？')">
                                </form>
                            </li>
                        <% }
                    }); %>
                </ul>
                <!--表 ここまで-->


            <% } else { %>
                <p>ログインしてください</p>
            <% } %>
            
        </div>
    </div>

</body>

</html>